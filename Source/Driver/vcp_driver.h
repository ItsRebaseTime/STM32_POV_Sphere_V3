#ifndef __VCP_DRIVER__H__
#define __VCP_DRIVER__H__

/**********************************************************************************************************************
 * Includes
 *********************************************************************************************************************/
#include "stdbool.h"
#include "ring_buffer.h"
#include "usbd_cdc_if.h"
/**********************************************************************************************************************
 * Exported definitions and macros
 *********************************************************************************************************************/

/**********************************************************************************************************************
 * Exported types
 *********************************************************************************************************************/
typedef enum eVcpErrorEnum_t {
    eVcpFAIL,
    eVcpOK,
} eVcpErrorEnum_t;
/**********************************************************************************************************************
 * Exported variables
 *********************************************************************************************************************/

/**********************************************************************************************************************
 * Prototypes of exported functions
 *********************************************************************************************************************/
eVcpErrorEnum_t VCP_Driver_Init (void);
void VCP_Driver_SendByte (uint8_t byte);
eVcpErrorEnum_t VCP_Driver_SendBytes (uint8_t *bytes, uint8_t len);
eVcpErrorEnum_t VCP_Driver_SendString (char *string);
eVcpErrorEnum_t VCP_Driver_ReadByte (uint8_t *byte);
uint16_t VCP_Driver_ReadBytes (uint8_t *bytes, uint16_t number_of_bytes);
void VCP_Driver_Receive_Handler (uint8_t byte_received);
void VCP_Driver_ResetBuffer ();

#endif /*__VCP_DRIVER__H__*/
